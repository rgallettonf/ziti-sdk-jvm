/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    jcenter()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    implementation 'org.openziti:ziti:0.23.12'

	implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0'
	implementation 'org.slf4j:slf4j-api:1.7.32'
	implementation 'org.slf4j:slf4j-simple:1.7.32'
	implementation 'com.squareup.okhttp3:okhttp:4.9.3'
	implementation 'com.squareup.okhttp3:logging-interceptor:3.14.9'
	implementation('com.squareup.retrofit2:retrofit:2.9.0')
    implementation('com.squareup.retrofit2:converter-gson:2.9.0')
    implementation("com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2")
	implementation("com.goterl:lazysodium-java:5.1.1") {
        exclude module: 'slf4j-api'
    }
	implementation("net.java.dev.jna:jna:5.8.0")
	implementation("com.goterl:resource-loader:2.0.1")
	implementation("com.codahale.metrics:metrics-core:3.0.2")
	implementation("org.mongodb:mongo-java-driver:3.12.7")
	implementation('com.github.marianobarrios:tls-channel:0.5.0')
	implementation('org.json:json:20180130')
	implementation('io.jsonwebtoken:jjwt-api:0.11.2')
	implementation('io.jsonwebtoken:jjwt-impl:0.11.2')
	implementation('io.jsonwebtoken:jjwt-jackson:0.11.2')
	implementation('org.bouncycastle:bcpkix-jdk15to18:1.69')
	implementation('org.bouncycastle:bcutil-jdk15to18:1.69')
	implementation('org.bouncycastle:bcprov-jdk15to18:1.69')
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

jar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	exclude("META-INF/*.SF", "META-INF/*.DSA", "META-INF/*.RSA")

    manifest {
        attributes(
                'Main-Class': 'org.openziti.zeds.HelloZiggyMain'
        )
    }

    from {
        configurations.compileClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
 }
